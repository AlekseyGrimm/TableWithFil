{"version":3,"sources":["components/data/dataNamor.js","components/table/table.js","App.js","index.js"],"names":["range","length","arr","i","push","showRoom","cars","namor","generate","words","numbers","brand","price","Math","floor","random","release","DefaultColumnFilter","column","filterValue","setFilter","value","style","border","onChange","e","target","undefined","textFilter","rows","id","matchSorter","keys","row","values","TableWithFilte","columns","data","filterTypes","React","useMemo","Text","text","filter","rowValue","String","toLowerCase","startsWith","defaultColumn","Filter","useTable","initialState","pageindex","useFilters","useGlobalFilter","usePagination","getTableProps","getTableBodyProps","headerGroups","prepareRow","page","canPreviousPage","canNextPage","pageOptions","pageCount","gotoPage","nextPage","previousPage","setPageSize","state","pageIndex","pageSize","map","headerGroup","getHeaderGroupProps","headers","getHeaderProps","fontSize","render","canFilter","getRowProps","cells","cell","getCellProps","className","padding","Number","onClick","disabled","autoRemove","val","App","Header","accessor","dataLevel","too","x","subRows","mokData","ReactDOM","document","getElementById"],"mappings":"8WAEMA,EAAQ,SAAAC,GAEV,IADA,IAAMC,EAAM,GACHC,EAAI,EAAGA,EAAIF,EAAQE,IACxBD,EAAIE,KAAKD,GAEb,OAAOD,GAGLG,EAAW,WACb,MAAO,CACHC,KAAMC,IAAMC,SAAS,CAAEC,MAAO,EAAGC,QAAS,IAC1CC,MAAOJ,IAAMC,SAAS,CAAEC,MAAO,EAAGC,QAAS,IAC3CE,MAAOC,KAAKC,MAAsB,IAAhBD,KAAKE,UACvBC,QAASH,KAAKC,MAAsB,IAAhBD,KAAKE,Y,4BCLjC,SAASE,EAAT,GAEI,IAAD,IADCC,OAAUC,EACX,EADWA,YAAaC,EACxB,EADwBA,UAGvB,OACI,uBACIC,MAAOF,GAAe,GACtBG,MAAO,CAAEC,OAAQ,qBACjBC,SAAU,SAAAC,GACNL,EAAUK,EAAEC,OAAOL,YAASM,MAM5C,SAASC,EAAWC,EAAMC,EAAIX,GAC1B,OAAOY,YAAYF,EAAMV,EAAa,CAAEa,KAAM,CAAC,SAAAC,GAAG,OAAIA,EAAIC,OAAOJ,OAKtD,SAASK,EAAT,GAA4C,IAAlBC,EAAiB,EAAjBA,QAASC,EAAQ,EAARA,KACxCC,EAAcC,IAAMC,SACtB,iBAAO,CACHC,KAAMb,EACNc,KAAM,SAACb,EAAMC,EAAIX,GACb,OAAOU,EAAKc,QAAO,SAAAV,GACf,IAAMW,EAAWX,EAAIC,OAAOJ,GAC5B,YAAoBH,IAAbiB,GACDC,OAAOD,GACJE,cACAC,WAAWF,OAAO1B,GAAa2B,sBAKpD,IAGEE,EAAgBT,IAAMC,SACxB,iBAAO,CACHS,OAAQhC,KAEZ,IAtBkD,EAwClDiC,mBACA,CACId,UACAC,OACAc,aAAc,CAAEC,UAAW,GAC3BJ,gBACAV,eAEJe,aACAC,kBACAC,iBAxBAC,EA1BkD,EA0BlDA,cACAC,EA3BkD,EA2BlDA,kBACAC,EA5BkD,EA4BlDA,aACAC,EA7BkD,EA6BlDA,WACAC,EA9BkD,EA8BlDA,KACAC,EA/BkD,EA+BlDA,gBACAC,EAhCkD,EAgClDA,YACAC,EAjCkD,EAiClDA,YACAC,EAlCkD,EAkClDA,UACAC,EAnCkD,EAmClDA,SACAC,EApCkD,EAoClDA,SACAC,EArCkD,EAqClDA,aACAC,EAtCkD,EAsClDA,YAtCkD,IAuClDC,MAASC,EAvCyC,EAuCzCA,UAAWC,EAvC8B,EAuC9BA,SAexB,OACI,qCACI,kDAAWf,KAAX,cACI,gCACKE,EAAac,KAAI,SAAAC,GAAW,OACzB,8CAAQA,EAAYC,uBAApB,aACKD,EAAYE,QAAQH,KAAI,SAAAtD,GAAM,OAC3B,+CACQA,EAAO0D,kBADf,IAEItD,MAAO,CAAEuD,SAAU,OAFvB,UAGK3D,EAAO4D,OAAO,UACf,8BACK5D,EAAO6D,UAAY7D,EAAO4D,OAAO,UAAY,sBAOtE,iDAAWrB,KAAX,aACKG,EAAKY,KAAI,SAACvC,EAAK9B,GAEZ,OADAwD,EAAW1B,GAEP,8CAAQA,EAAI+C,eAAZ,aACK/C,EAAIgD,MAAMT,KAAI,SAAAU,GACX,OACI,8CACQA,EAAKC,gBADb,aAC8BD,EAAKJ,OAAO,2BAStE,sBAAKM,UAAU,mBAAf,UACI,wBACI9D,MAAO,CACH+D,QAAS,MACT9D,OAAQ,qBAEZF,MAAOkD,EACP/C,SAAU,SAAAC,GACN2C,EAAYkB,OAAO7D,EAAEC,OAAOL,SAPpC,SASK,CAAC,GAAI,GAAI,GAAI,GAAI,IAAImD,KAAI,SAAAD,GAAQ,OAC9B,yBAAuBlD,MAAOkD,EAA9B,oBACYA,IADCA,QAIX,IACV,wBACIgB,QAAS,kBAAMtB,EAAS,IACxBuB,UAAW3B,EAFf,SAGK,OACK,IACV,wBACI0B,QAAS,kBAAMpB,KACfqB,UAAW3B,EAFf,SAGK,MACK,IACV,wCACS,IACL,mCACKS,EAAY,EADjB,OACwBP,EAAY9D,UAC1B,OAEd,wBACIsF,QAAS,kBAAMrB,KACfsB,UAAW1B,EAFf,SAGK,MACK,IACV,wBACIyB,QAAS,kBAAMtB,EAASD,EAAY,IACpCwB,UAAW1B,EAFf,SAGK,aApIrBlC,EAAW6D,WAAa,SAAAC,GAAG,OAAKA,GCcjBC,MAvCf,WACE,IAAMvD,EAAUG,IAAMC,SACpB,iBAAM,CACJ,CACEoD,OAAQ,IACRxD,QAAS,CACP,CACEwD,OAAQ,OACRC,SAAU,QAEZ,CACED,OAAQ,QACRC,SAAU,SAEZ,CACED,OAAQ,QACRC,SAAU,SAEZ,CACED,OAAQ,UACRC,SAAU,gBAKlB,IAGIxD,EAAOE,IAAMC,SAAQ,kBFbd,WAA6B,IAAD,uBAARvC,EAAQ,yBAARA,EAAQ,gBAWvC,OAVkB,SAAZ6F,IAAwB,IAAXrE,EAAU,uDAAN,EACbsE,EAAM9F,EAAOwB,GACnB,OAAOzB,EAAM+F,GAAKvB,KAAI,SAAAwB,GAClB,OAAO,2BACA3F,KADP,IAEI4F,QAAShG,EAAOwB,EAAI,GAAKqE,EAAUrE,EAAI,QAAKE,OAKjDmE,GEEwBI,CAAQ,OAAM,IAE/C,OACE,mCACE,cAAC/D,EAAD,CACAC,QAASA,EACTC,KAAMA,OClCZ8D,IAASrB,OAAO,cAAC,EAAD,IAASsB,SAASC,eAAe,W","file":"static/js/main.3b3fa6dc.chunk.js","sourcesContent":["import namor from 'namor'\r\n\r\nconst range = length => {\r\n    const arr = []\r\n    for (let i = 0; i < length; i++) {\r\n        arr.push(i)\r\n    }\r\n    return arr\r\n}\r\n\r\nconst showRoom = () => {\r\n    return {\r\n        cars: namor.generate({ words: 1, numbers: 0 }),\r\n        brand: namor.generate({ words: 1, numbers: 0 }),\r\n        price: Math.floor(Math.random() * 2000),\r\n        release: Math.floor(Math.random() * 2000),\r\n    }\r\n}\r\n\r\nexport default function mokData(...length) {\r\n    const dataLevel = (e = 0) => {\r\n        const too = length[e]\r\n        return range(too).map(x => {\r\n            return {\r\n                ...showRoom(),\r\n                subRows: length[e + 1] ? dataLevel(e + 1) : undefined,\r\n            }\r\n        })\r\n    }\r\n\r\n    return dataLevel()\r\n}","import React from \"react\"\r\nimport {\r\n    useTable,\r\n    usePagination,\r\n    useGlobalFilter,\r\n    useFilters\r\n} from \"react-table\";\r\nimport { matchSorter } from \"match-sorter\";\r\n\r\n\r\nfunction DefaultColumnFilter({\r\n    column: { filterValue, setFilter }\r\n}) {\r\n\r\n    return (\r\n        <input\r\n            value={filterValue || \"\"}\r\n            style={{ border: '2px solid #2418d7' }}\r\n            onChange={e => {\r\n                setFilter(e.target.value || undefined);\r\n            }}\r\n        />\r\n    );\r\n}\r\n\r\nfunction textFilter(rows, id, filterValue) {\r\n    return matchSorter(rows, filterValue, { keys: [row => row.values[id]] });\r\n}\r\n\r\ntextFilter.autoRemove = val => !val;\r\n\r\nexport default function TableWithFilte({ columns, data }) {\r\n    const filterTypes = React.useMemo(\r\n        () => ({\r\n            Text: textFilter,\r\n            text: (rows, id, filterValue) => {\r\n                return rows.filter(row => {\r\n                    const rowValue = row.values[id];\r\n                    return rowValue !== undefined\r\n                        ? String(rowValue)\r\n                            .toLowerCase()\r\n                            .startsWith(String(filterValue).toLowerCase())\r\n                        : true;\r\n                });\r\n            }\r\n        }),\r\n        []\r\n    );\r\n\r\n    const defaultColumn = React.useMemo(\r\n        () => ({\r\n            Filter: DefaultColumnFilter\r\n        }),\r\n        []\r\n    );\r\n\r\n    const {\r\n        getTableProps,\r\n        getTableBodyProps,\r\n        headerGroups,\r\n        prepareRow,\r\n        page,\r\n        canPreviousPage,\r\n        canNextPage,\r\n        pageOptions,\r\n        pageCount,\r\n        gotoPage,\r\n        nextPage,\r\n        previousPage,\r\n        setPageSize,\r\n        state: { pageIndex, pageSize },\r\n    } = useTable(\r\n        {\r\n            columns,\r\n            data,\r\n            initialState: { pageindex: 2 },\r\n            defaultColumn,\r\n            filterTypes\r\n        },\r\n        useFilters,\r\n        useGlobalFilter,\r\n        usePagination\r\n\r\n    );\r\n\r\n    return (\r\n        <>\r\n            <table {...getTableProps()}>\r\n                <thead>\r\n                    {headerGroups.map(headerGroup => (\r\n                        <tr {...headerGroup.getHeaderGroupProps()}>\r\n                            {headerGroup.headers.map(column => (\r\n                                <th\r\n                                    {...column.getHeaderProps()}\r\n                                    style={{ fontSize: '2em' }} >\r\n                                    {column.render(\"Header\")}\r\n                                    <div>\r\n                                        {column.canFilter ? column.render(\"Filter\") : null}\r\n                                    </div>\r\n                                </th>\r\n                            ))}\r\n                        </tr>\r\n                    ))}\r\n                </thead>\r\n                <tbody {...getTableBodyProps()}>\r\n                    {page.map((row, i) => {\r\n                        prepareRow(row);\r\n                        return (\r\n                            <tr {...row.getRowProps()}>\r\n                                {row.cells.map(cell => {\r\n                                    return (\r\n                                        <td\r\n                                            {...cell.getCellProps()}>{cell.render(\"Cell\")}\r\n                                        </td>\r\n                                    );\r\n                                })}\r\n                            </tr>\r\n                        );\r\n                    })}\r\n                </tbody>\r\n            </table>\r\n            <div className=\"float-right mb-3\">\r\n                <select\r\n                    style={{\r\n                        padding: \"7px\",\r\n                        border: \"2px solid #007bff\"\r\n                    }}\r\n                    value={pageSize}\r\n                    onChange={e => {\r\n                        setPageSize(Number(e.target.value));\r\n                    }}>\r\n                    {[10, 15, 20, 25, 30].map(pageSize => (\r\n                        <option key={pageSize} value={pageSize}>\r\n                            String {pageSize}\r\n                        </option>\r\n                    ))}\r\n                </select>{\" \"}\r\n                <button\r\n                    onClick={() => gotoPage(0)}\r\n                    disabled={!canPreviousPage}>\r\n                    {\"<<\"}\r\n                </button>{\" \"}\r\n                <button\r\n                    onClick={() => previousPage()}\r\n                    disabled={!canPreviousPage}>\r\n                    {\"<\"}\r\n                </button>{\" \"}\r\n                <span>\r\n                    Page{\" \"}\r\n                    <strong>\r\n                        {pageIndex + 1} of {pageOptions.length}\r\n                    </strong>{\" \"}\r\n                </span>\r\n                <button\r\n                    onClick={() => nextPage()}\r\n                    disabled={!canNextPage}>\r\n                    {\">\"}\r\n                </button>{\" \"}\r\n                <button\r\n                    onClick={() => gotoPage(pageCount - 1)}\r\n                    disabled={!canNextPage}>\r\n                    {\">>\"}\r\n                </button>\r\n            </div>\r\n        </>\r\n    );\r\n}","import React from \"react\";\nimport mokData from \"./components/data/dataNamor\";\nimport TableWithFilte from \"./components/table/table\";\n\nfunction App() {\n  const columns = React.useMemo(\n    () => [\n      {\n        Header: \" \",\n        columns: [\n          {\n            Header: \"Cars\",\n            accessor: \"cars\",\n          },\n          {\n            Header: \"Brand\",\n            accessor: \"brand\"\n          },\n          {\n            Header: \"Price\",\n            accessor: \"price\"\n          },\n          {\n            Header: \"Release\",\n            accessor: \"release\"\n          }\n        ]\n      },\n    ],\n    []\n  );\n\n  const data = React.useMemo(() => mokData(100), []);\n\n  return (\n    <>\n      <TableWithFilte \n      columns={columns} \n      data={data} />\n    </>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from \"react-dom\";\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'))\n"],"sourceRoot":""}